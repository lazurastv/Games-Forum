/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UserVM
 */
export interface UserVM {
    /**
     * 
     * @type {number}
     * @memberof UserVM
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof UserVM
     */
    username?: string;
    /**
     * 
     * @type {string}
     * @memberof UserVM
     */
    email?: string;
    /**
     * 
     * @type {string}
     * @memberof UserVM
     */
    shortDescription?: string;
    /**
     * 
     * @type {string}
     * @memberof UserVM
     */
    profilePicturePath?: string;
    /**
     * 
     * @type {string}
     * @memberof UserVM
     */
    role?: string;
    /**
     * 
     * @type {number}
     * @memberof UserVM
     */
    commentCount?: number;
    /**
     * 
     * @type {boolean}
     * @memberof UserVM
     */
    banned?: boolean;
}

export function UserVMFromJSON(json: any): UserVM {
    return UserVMFromJSONTyped(json, false);
}

export function UserVMFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserVM {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'username': !exists(json, 'username') ? undefined : json['username'],
        'email': !exists(json, 'email') ? undefined : json['email'],
        'shortDescription': !exists(json, 'shortDescription') ? undefined : json['shortDescription'],
        'profilePicturePath': !exists(json, 'profilePicturePath') ? undefined : json['profilePicturePath'],
        'role': !exists(json, 'role') ? undefined : json['role'],
        'commentCount': !exists(json, 'commentCount') ? undefined : json['commentCount'],
        'banned': !exists(json, 'banned') ? undefined : json['banned'],
    };
}

export function UserVMToJSON(value?: UserVM | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'username': value.username,
        'email': value.email,
        'shortDescription': value.shortDescription,
        'profilePicturePath': value.profilePicturePath,
        'role': value.role,
        'commentCount': value.commentCount,
        'banned': value.banned,
    };
}

