/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    AuthorVM,
    AuthorVMFromJSON,
    AuthorVMFromJSONTyped,
    AuthorVMToJSON,
} from './AuthorVM';
import {
    CommentVM,
    CommentVMFromJSON,
    CommentVMFromJSONTyped,
    CommentVMToJSON,
} from './CommentVM';

/**
 * 
 * @export
 * @interface ArticleFullInfoVM
 */
export interface ArticleFullInfoVM {
    /**
     * 
     * @type {number}
     * @memberof ArticleFullInfoVM
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof ArticleFullInfoVM
     */
    title?: string;
    /**
     * 
     * @type {string}
     * @memberof ArticleFullInfoVM
     */
    introduction?: string;
    /**
     * 
     * @type {string}
     * @memberof ArticleFullInfoVM
     */
    path?: string;
    /**
     * 
     * @type {Date}
     * @memberof ArticleFullInfoVM
     */
    publishDate?: Date;
    /**
     * 
     * @type {AuthorVM}
     * @memberof ArticleFullInfoVM
     */
    author?: AuthorVM;
    /**
     * 
     * @type {number}
     * @memberof ArticleFullInfoVM
     */
    likes?: number;
    /**
     * 
     * @type {number}
     * @memberof ArticleFullInfoVM
     */
    dislikes?: number;
    /**
     * 
     * @type {Array<CommentVM>}
     * @memberof ArticleFullInfoVM
     */
    comments?: Array<CommentVM>;
}

export function ArticleFullInfoVMFromJSON(json: any): ArticleFullInfoVM {
    return ArticleFullInfoVMFromJSONTyped(json, false);
}

export function ArticleFullInfoVMFromJSONTyped(json: any, ignoreDiscriminator: boolean): ArticleFullInfoVM {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'title': !exists(json, 'title') ? undefined : json['title'],
        'introduction': !exists(json, 'introduction') ? undefined : json['introduction'],
        'path': !exists(json, 'path') ? undefined : json['path'],
        'publishDate': !exists(json, 'publishDate') ? undefined : (new Date(json['publishDate'])),
        'author': !exists(json, 'author') ? undefined : AuthorVMFromJSON(json['author']),
        'likes': !exists(json, 'likes') ? undefined : json['likes'],
        'dislikes': !exists(json, 'dislikes') ? undefined : json['dislikes'],
        'comments': !exists(json, 'comments') ? undefined : ((json['comments'] as Array<any>).map(CommentVMFromJSON)),
    };
}

export function ArticleFullInfoVMToJSON(value?: ArticleFullInfoVM | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'title': value.title,
        'introduction': value.introduction,
        'path': value.path,
        'publishDate': value.publishDate === undefined ? undefined : (value.publishDate.toISOString()),
        'author': AuthorVMToJSON(value.author),
        'likes': value.likes,
        'dislikes': value.dislikes,
        'comments': value.comments === undefined ? undefined : ((value.comments as Array<any>).map(CommentVMToJSON)),
    };
}

