/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ReviewAddUpdate
 */
export interface ReviewAddUpdate {
    /**
     * 
     * @type {string}
     * @memberof ReviewAddUpdate
     */
    title?: string;
    /**
     * 
     * @type {string}
     * @memberof ReviewAddUpdate
     */
    introduction?: string;
    /**
     * 
     * @type {string}
     * @memberof ReviewAddUpdate
     */
    content?: string;
    /**
     * 
     * @type {number}
     * @memberof ReviewAddUpdate
     */
    score?: number;
    /**
     * 
     * @type {Array<string>}
     * @memberof ReviewAddUpdate
     */
    pluses?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof ReviewAddUpdate
     */
    minuses?: Array<string>;
}

export function ReviewAddUpdateFromJSON(json: any): ReviewAddUpdate {
    return ReviewAddUpdateFromJSONTyped(json, false);
}

export function ReviewAddUpdateFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReviewAddUpdate {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'title': !exists(json, 'title') ? undefined : json['title'],
        'introduction': !exists(json, 'introduction') ? undefined : json['introduction'],
        'content': !exists(json, 'content') ? undefined : json['content'],
        'score': !exists(json, 'score') ? undefined : json['score'],
        'pluses': !exists(json, 'pluses') ? undefined : json['pluses'],
        'minuses': !exists(json, 'minuses') ? undefined : json['minuses'],
    };
}

export function ReviewAddUpdateToJSON(value?: ReviewAddUpdate | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'title': value.title,
        'introduction': value.introduction,
        'content': value.content,
        'score': value.score,
        'pluses': value.pluses,
        'minuses': value.minuses,
    };
}

